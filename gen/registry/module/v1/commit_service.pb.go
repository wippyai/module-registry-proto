// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: registry/module/v1/commit_service.proto

package modulev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListModuleCommitsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Module IDs to retrieve commits for.
	ModuleIds     []string `protobuf:"bytes,1,rep,name=module_ids,json=moduleIds,proto3" json:"module_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListModuleCommitsRequest) Reset() {
	*x = ListModuleCommitsRequest{}
	mi := &file_registry_module_v1_commit_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModuleCommitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModuleCommitsRequest) ProtoMessage() {}

func (x *ListModuleCommitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_module_v1_commit_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModuleCommitsRequest.ProtoReflect.Descriptor instead.
func (*ListModuleCommitsRequest) Descriptor() ([]byte, []int) {
	return file_registry_module_v1_commit_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListModuleCommitsRequest) GetModuleIds() []string {
	if x != nil {
		return x.ModuleIds
	}
	return nil
}

type ListModuleCommitsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The listed commits for the requested modules.
	Commits       []*Commit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListModuleCommitsResponse) Reset() {
	*x = ListModuleCommitsResponse{}
	mi := &file_registry_module_v1_commit_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModuleCommitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModuleCommitsResponse) ProtoMessage() {}

func (x *ListModuleCommitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_module_v1_commit_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModuleCommitsResponse.ProtoReflect.Descriptor instead.
func (*ListModuleCommitsResponse) Descriptor() ([]byte, []int) {
	return file_registry_module_v1_commit_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListModuleCommitsResponse) GetCommits() []*Commit {
	if x != nil {
		return x.Commits
	}
	return nil
}

var File_registry_module_v1_commit_service_proto protoreflect.FileDescriptor

const file_registry_module_v1_commit_service_proto_rawDesc = "" +
	"\n" +
	"'registry/module/v1/commit_service.proto\x12\x12registry.module.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fregistry/module/v1/commit.proto\"O\n" +
	"\x18ListModuleCommitsRequest\x123\n" +
	"\n" +
	"module_ids\x18\x01 \x03(\tB\x14\xbaH\x11\x92\x01\x0e\b\x01\x10\x80\x02\x18\x01\"\x05r\x03\xb0\x01\x01R\tmoduleIds\"Q\n" +
	"\x19ListModuleCommitsResponse\x124\n" +
	"\acommits\x18\x01 \x03(\v2\x1a.registry.module.v1.CommitR\acommits2\x86\x01\n" +
	"\rCommitService\x12u\n" +
	"\x11ListModuleCommits\x12,.registry.module.v1.ListModuleCommitsRequest\x1a-.registry.module.v1.ListModuleCommitsResponse\"\x03\x90\x02\x01BJZHgithub.com/wippyai/module-registry-proto/gen/registry/module/v1;modulev1b\x06proto3"

var (
	file_registry_module_v1_commit_service_proto_rawDescOnce sync.Once
	file_registry_module_v1_commit_service_proto_rawDescData []byte
)

func file_registry_module_v1_commit_service_proto_rawDescGZIP() []byte {
	file_registry_module_v1_commit_service_proto_rawDescOnce.Do(func() {
		file_registry_module_v1_commit_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_module_v1_commit_service_proto_rawDesc), len(file_registry_module_v1_commit_service_proto_rawDesc)))
	})
	return file_registry_module_v1_commit_service_proto_rawDescData
}

var file_registry_module_v1_commit_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_registry_module_v1_commit_service_proto_goTypes = []any{
	(*ListModuleCommitsRequest)(nil),  // 0: registry.module.v1.ListModuleCommitsRequest
	(*ListModuleCommitsResponse)(nil), // 1: registry.module.v1.ListModuleCommitsResponse
	(*Commit)(nil),                    // 2: registry.module.v1.Commit
}
var file_registry_module_v1_commit_service_proto_depIdxs = []int32{
	2, // 0: registry.module.v1.ListModuleCommitsResponse.commits:type_name -> registry.module.v1.Commit
	0, // 1: registry.module.v1.CommitService.ListModuleCommits:input_type -> registry.module.v1.ListModuleCommitsRequest
	1, // 2: registry.module.v1.CommitService.ListModuleCommits:output_type -> registry.module.v1.ListModuleCommitsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_registry_module_v1_commit_service_proto_init() }
func file_registry_module_v1_commit_service_proto_init() {
	if File_registry_module_v1_commit_service_proto != nil {
		return
	}
	file_registry_module_v1_commit_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_module_v1_commit_service_proto_rawDesc), len(file_registry_module_v1_commit_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_module_v1_commit_service_proto_goTypes,
		DependencyIndexes: file_registry_module_v1_commit_service_proto_depIdxs,
		MessageInfos:      file_registry_module_v1_commit_service_proto_msgTypes,
	}.Build()
	File_registry_module_v1_commit_service_proto = out.File
	file_registry_module_v1_commit_service_proto_goTypes = nil
	file_registry_module_v1_commit_service_proto_depIdxs = nil
}
