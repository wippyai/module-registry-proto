// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: registry/module/v1/commit.proto

package modulev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A commit on a specific Module.
type Commit struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId  string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ModuleId        string                 `protobuf:"bytes,3,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	Digest          string                 `protobuf:"bytes,4,opt,name=digest,proto3" json:"digest,omitempty"`
	CreatedByUserId string                 `protobuf:"bytes,5,opt,name=created_by_user_id,json=createdByUserId,proto3" json:"created_by_user_id,omitempty"`
	CreateTime      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_registry_module_v1_commit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_registry_module_v1_commit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_registry_module_v1_commit_proto_rawDescGZIP(), []int{0}
}

func (x *Commit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Commit) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Commit) GetModuleId() string {
	if x != nil {
		return x.ModuleId
	}
	return ""
}

func (x *Commit) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *Commit) GetCreatedByUserId() string {
	if x != nil {
		return x.CreatedByUserId
	}
	return ""
}

func (x *Commit) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_registry_module_v1_commit_proto protoreflect.FileDescriptor

const file_registry_module_v1_commit_proto_rawDesc = "" +
	"\n" +
	"\x1fregistry/module/v1/commit.proto\x12\x12registry.module.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x91\x02\n" +
	"\x06Commit\x12\x18\n" +
	"\x02id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x121\n" +
	"\x0forganization_id\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x0eorganizationId\x12%\n" +
	"\tmodule_id\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\bmoduleId\x12\x1f\n" +
	"\x06digest\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x18dR\x06digest\x125\n" +
	"\x12created_by_user_id\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x0fcreatedByUserId\x12;\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTimeBJZHgithub.com/wippyai/module-registry-proto/gen/registry/module/v1;modulev1b\x06proto3"

var (
	file_registry_module_v1_commit_proto_rawDescOnce sync.Once
	file_registry_module_v1_commit_proto_rawDescData []byte
)

func file_registry_module_v1_commit_proto_rawDescGZIP() []byte {
	file_registry_module_v1_commit_proto_rawDescOnce.Do(func() {
		file_registry_module_v1_commit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_module_v1_commit_proto_rawDesc), len(file_registry_module_v1_commit_proto_rawDesc)))
	})
	return file_registry_module_v1_commit_proto_rawDescData
}

var file_registry_module_v1_commit_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_registry_module_v1_commit_proto_goTypes = []any{
	(*Commit)(nil),                // 0: registry.module.v1.Commit
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_registry_module_v1_commit_proto_depIdxs = []int32{
	1, // 0: registry.module.v1.Commit.create_time:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_registry_module_v1_commit_proto_init() }
func file_registry_module_v1_commit_proto_init() {
	if File_registry_module_v1_commit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_module_v1_commit_proto_rawDesc), len(file_registry_module_v1_commit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_registry_module_v1_commit_proto_goTypes,
		DependencyIndexes: file_registry_module_v1_commit_proto_depIdxs,
		MessageInfos:      file_registry_module_v1_commit_proto_msgTypes,
	}.Build()
	File_registry_module_v1_commit_proto = out.File
	file_registry_module_v1_commit_proto_goTypes = nil
	file_registry_module_v1_commit_proto_depIdxs = nil
}
