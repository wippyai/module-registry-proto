// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: registry/module/v1/upload_service.proto

package modulev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Module of the reference.
	ModuleRef *ModuleRef `protobuf:"bytes,1,opt,name=module_ref,json=moduleRef,proto3" json:"module_ref,omitempty"`
	// The Files of the Content.
	Files         []*File `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_registry_module_v1_upload_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_module_v1_upload_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_registry_module_v1_upload_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadRequest) GetModuleRef() *ModuleRef {
	if x != nil {
		return x.ModuleRef
	}
	return nil
}

func (x *UploadRequest) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type UploadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created commit
	Commit        *Commit `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_registry_module_v1_upload_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_module_v1_upload_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_registry_module_v1_upload_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

var File_registry_module_v1_upload_service_proto protoreflect.FileDescriptor

const file_registry_module_v1_upload_service_proto_rawDesc = "" +
	"\n" +
	"'registry/module/v1/upload_service.proto\x12\x12registry.module.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fregistry/module/v1/commit.proto\x1a\x1dregistry/module/v1/file.proto\x1a\x1fregistry/module/v1/module.proto\"\x8f\x01\n" +
	"\rUploadRequest\x12D\n" +
	"\n" +
	"module_ref\x18\x01 \x01(\v2\x1d.registry.module.v1.ModuleRefB\x06\xbaH\x03\xc8\x01\x01R\tmoduleRef\x128\n" +
	"\x05files\x18\x02 \x03(\v2\x18.registry.module.v1.FileB\b\xbaH\x05\x92\x01\x02\b\x01R\x05files\"D\n" +
	"\x0eUploadResponse\x122\n" +
	"\x06commit\x18\x01 \x01(\v2\x1a.registry.module.v1.CommitR\x06commit2b\n" +
	"\rUploadService\x12Q\n" +
	"\x06Upload\x12!.registry.module.v1.UploadRequest\x1a\".registry.module.v1.UploadResponse\"\x00BJZHgithub.com/wippyai/module-registry-proto/gen/registry/module/v1;modulev1b\x06proto3"

var (
	file_registry_module_v1_upload_service_proto_rawDescOnce sync.Once
	file_registry_module_v1_upload_service_proto_rawDescData []byte
)

func file_registry_module_v1_upload_service_proto_rawDescGZIP() []byte {
	file_registry_module_v1_upload_service_proto_rawDescOnce.Do(func() {
		file_registry_module_v1_upload_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_module_v1_upload_service_proto_rawDesc), len(file_registry_module_v1_upload_service_proto_rawDesc)))
	})
	return file_registry_module_v1_upload_service_proto_rawDescData
}

var file_registry_module_v1_upload_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_registry_module_v1_upload_service_proto_goTypes = []any{
	(*UploadRequest)(nil),  // 0: registry.module.v1.UploadRequest
	(*UploadResponse)(nil), // 1: registry.module.v1.UploadResponse
	(*ModuleRef)(nil),      // 2: registry.module.v1.ModuleRef
	(*File)(nil),           // 3: registry.module.v1.File
	(*Commit)(nil),         // 4: registry.module.v1.Commit
}
var file_registry_module_v1_upload_service_proto_depIdxs = []int32{
	2, // 0: registry.module.v1.UploadRequest.module_ref:type_name -> registry.module.v1.ModuleRef
	3, // 1: registry.module.v1.UploadRequest.files:type_name -> registry.module.v1.File
	4, // 2: registry.module.v1.UploadResponse.commit:type_name -> registry.module.v1.Commit
	0, // 3: registry.module.v1.UploadService.Upload:input_type -> registry.module.v1.UploadRequest
	1, // 4: registry.module.v1.UploadService.Upload:output_type -> registry.module.v1.UploadResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_registry_module_v1_upload_service_proto_init() }
func file_registry_module_v1_upload_service_proto_init() {
	if File_registry_module_v1_upload_service_proto != nil {
		return
	}
	file_registry_module_v1_commit_proto_init()
	file_registry_module_v1_file_proto_init()
	file_registry_module_v1_module_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_module_v1_upload_service_proto_rawDesc), len(file_registry_module_v1_upload_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_module_v1_upload_service_proto_goTypes,
		DependencyIndexes: file_registry_module_v1_upload_service_proto_depIdxs,
		MessageInfos:      file_registry_module_v1_upload_service_proto_msgTypes,
	}.Build()
	File_registry_module_v1_upload_service_proto = out.File
	file_registry_module_v1_upload_service_proto_goTypes = nil
	file_registry_module_v1_upload_service_proto_depIdxs = nil
}
